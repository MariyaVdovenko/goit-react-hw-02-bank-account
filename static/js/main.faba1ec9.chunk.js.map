{"version":3,"sources":["components/Dashboard/Balance/Balance.module.css","components/Dashboard/Controls/Controls.module.css","components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/Dashboard/Dashboard.jsx","index.js"],"names":["module","exports","Controls","className","styles","controls","type","name","value","this","props","amount","onChange","handleChange","onClick","onWithdraw","onDeposit","Component","defaultProps","Balance","balance","income","expenses","balanceData","role","aria-label","TransactionHistory","transactions","history","map","transaction","key","id","date","Dashboard","state","e","setState","target","accountSummary","reduce","acc","t","deposit","withdraw","isEnough","Number","alert","addTransaction","transType","prevState","shortId","generate","Date","toLocaleString","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.faba1ec9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__zQEqW\",\"balanceData\":\"Balance_balanceData__1-2jW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3aeoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__33oRN\"};","import React, { Component } from 'react';\r\nimport styles from './Controls.module.css';\r\n\r\nexport default class Controls extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {};\r\n  0;\r\n  render() {\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={this.props.amount}\r\n          onChange={this.props.handleChange}\r\n        />\r\n        <button type=\"button\" name=\"Withdraw\" onClick={this.props.onWithdraw}>\r\n          Withdraw\r\n        </button>\r\n        <button type=\"button\" name=\"Deposit\" onClick={this.props.onDeposit}>\r\n          Deposit\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './Balance.module.css';\r\n\r\nconst Balance = ({ balance, income, expenses }) => (\r\n  <section className={styles.balance}>\r\n    <span className={styles.balanceData}>\r\n      <span role=\"img\" aria-label=\"up\">\r\n        ⬆️\r\n      </span>\r\n      {income}$\r\n    </span>\r\n    <span className={styles.balanceData}>\r\n      <span role=\"img\" aria-label=\"down\">\r\n        ⬇️\r\n      </span>\r\n      {expenses}$\r\n    </span>\r\n    <span className={styles.balanceData}>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {transactions.map(transaction => (\r\n        <tr key={transaction.id}>\r\n          <td>{transaction.type}</td>\r\n          <td>{transaction.amount}$</td>\r\n          <td>{transaction.date}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n","import React, { Component } from 'react';\r\nimport Controls from './Controls/Controls';\r\nimport Balance from './Balance/Balance';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\nimport shortId from 'shortid';\r\n\r\nexport default class Dashboard extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    transactions: [],\r\n    amount: '',\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ amount: e.target.value });\r\n  };\r\n  accountSummary = transactions => {\r\n    const summary = transactions.reduce(\r\n      (acc, t) => {\r\n        return {\r\n          ...acc,\r\n          [t.type]: t.amount + acc[t.type],\r\n        };\r\n      },\r\n      {\r\n        deposit: 0,\r\n        withdraw: 0,\r\n      },\r\n    );\r\n    return summary;\r\n  };\r\n  isEnough = () => {\r\n    const { deposit, withdraw } = this.accountSummary(this.state.transactions);\r\n\r\n    const balance = deposit - withdraw;\r\n\r\n    return balance >= Number(this.state.amount);\r\n  };\r\n  onWithdraw = e => {\r\n    if (this.state.amount <= 0) {\r\n      alert('Введите сумму для проведения операции!');\r\n      return;\r\n    }\r\n    if (!this.isEnough()) {\r\n      alert('На счету недостаточно средств для проведения операции!');\r\n      return;\r\n    }\r\n\r\n    this.addTransaction('withdraw');\r\n  };\r\n\r\n  onDeposit = e => {\r\n    if (this.state.amount <= 0) {\r\n      alert('Введите сумму для проведения операции!');\r\n      return;\r\n    }\r\n    this.addTransaction('deposit');\r\n  };\r\n\r\n  addTransaction(transType) {\r\n    this.setState(prevState => ({\r\n      amount: '',\r\n      transactions: [\r\n        ...prevState.transactions,\r\n        {\r\n          id: shortId.generate(),\r\n          amount: Number(prevState.amount),\r\n          date: new Date().toLocaleString(),\r\n          type: transType,\r\n        },\r\n      ],\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { amount, transactions } = this.state;\r\n    const { deposit, withdraw } = this.accountSummary(this.state.transactions);\r\n    const balance = deposit - withdraw;\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <Controls\r\n          amount={amount}\r\n          handleChange={this.handleChange}\r\n          onWithdraw={this.onWithdraw}\r\n          onDeposit={this.onDeposit}\r\n        />\r\n\r\n        <Balance balance={balance} income={deposit} expenses={withdraw} />\r\n\r\n        <TransactionHistory transactions={transactions} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Dashboard from './components/Dashboard/Dashboard';\r\n\r\nReactDOM.render(<Dashboard />, document.getElementById('root'));\r\n"],"sourceRoot":""}