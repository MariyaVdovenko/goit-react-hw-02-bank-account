{"version":3,"sources":["components/Dashboard/Controls/Controls.module.css","components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Balance/Balance.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/services/isEnough.js","components/Dashboard/Dashboard.jsx","index.js"],"names":["module","exports","Controls","state","amount","handleChange","e","setState","target","value","handleSubmit","NotificationManager","error","props","onCommitTransaction","currentTarget","name","className","styles","controls","type","this","onChange","onClick","Component","defaultProps","Balance","balance","income","expenses","balanceData","role","aria-label","TransactionHistory","transactions","history","map","transaction","key","id","date","accountSummary","reduce","acc","t","deposit","withdraw","isEnough","Number","Dashboard","nameOperation","saveTransaction","transType","shortId","generate","Date","toLocaleString","addTransaction","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.462155e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3aeoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__33oRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__zQEqW\",\"balanceData\":\"Balance_balanceData__1-2jW\"};","import React, { Component } from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport styles from './Controls.module.css';\r\nimport T from 'prop-types';\r\n\r\nexport default class Controls extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {\r\n    onCommitTransaction: T.func,\r\n  };\r\n\r\n  state = {\r\n    amount: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    this.setState({ amount: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    if (this.state.amount <= 0) {\r\n      NotificationManager.error(\r\n        'Введите сумму для проведения операции!',\r\n        'Ошибка',\r\n        5000,\r\n      );\r\n\r\n      return;\r\n    }\r\n    this.props.onCommitTransaction(e.currentTarget.name, this.state.amount);\r\n    this.setState({\r\n      amount: '',\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={this.state.amount}\r\n          onChange={this.handleChange}\r\n        />\r\n        <button type=\"button\" name=\"deposit\" onClick={this.handleSubmit}>\r\n          Deposit\r\n        </button>\r\n        <button type=\"button\" name=\"withdraw\" onClick={this.handleSubmit}>\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './Balance.module.css';\r\n\r\nconst Balance = ({ balance, income, expenses }) => (\r\n  <section className={styles.balance}>\r\n    <span className={styles.balanceData}>\r\n      <span role=\"img\" aria-label=\"up\">\r\n        ⬆️\r\n      </span>\r\n      {income}$\r\n    </span>\r\n    <span className={styles.balanceData}>\r\n      <span role=\"img\" aria-label=\"down\">\r\n        ⬇️\r\n      </span>\r\n      {expenses}$\r\n    </span>\r\n    <span className={styles.balanceData}>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {transactions.map(transaction => (\r\n        <tr key={transaction.id}>\r\n          <td>{transaction.type}</td>\r\n          <td>{transaction.amount}$</td>\r\n          <td>{transaction.date}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n","export const accountSummary = transactions => {\r\n  const summary = transactions.reduce(\r\n    (acc, t) => {\r\n      return {\r\n        ...acc,\r\n        [t.type]: t.amount + acc[t.type],\r\n      };\r\n    },\r\n    {\r\n      deposit: 0,\r\n      withdraw: 0,\r\n    },\r\n  );\r\n  return summary;\r\n};\r\nexport const isEnough = (transactions, amount) => {\r\n  const { deposit, withdraw } = accountSummary(transactions);\r\n\r\n  const balance = deposit - withdraw;\r\n\r\n  return balance >= Number(amount);\r\n};\r\n","import React, { Component } from 'react';\r\nimport Controls from './Controls/Controls';\r\nimport Balance from './Balance/Balance';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\nimport shortId from 'shortid';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport { accountSummary, isEnough } from '../services/isEnough';\r\nimport T from 'prop-types';\r\n\r\nexport default class Dashboard extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {\r\n    isEnough: T.func,\r\n    accountSummary: T.func,\r\n  };\r\n\r\n  state = {\r\n    transactions: [],\r\n  };\r\n\r\n  handleSubmit = (nameOperation, amount) => {\r\n    if (\r\n      nameOperation === 'withdraw' &&\r\n      !isEnough(this.state.transactions, amount)\r\n    ) {\r\n      NotificationManager.error(\r\n        'На счету недостаточно средств для проведения операции!',\r\n        'Ошибка',\r\n        5000,\r\n      );\r\n      return;\r\n    }\r\n    this.saveTransaction(`${nameOperation}`, amount);\r\n  };\r\n\r\n  saveTransaction(transType, amount) {\r\n    const transaction = {\r\n      id: shortId.generate(),\r\n      amount: Number(amount),\r\n      date: new Date().toLocaleString(),\r\n      type: transType,\r\n    };\r\n\r\n    this.addTransaction(transaction);\r\n  }\r\n\r\n  addTransaction(transaction) {\r\n    this.setState(prevState => ({\r\n      transactions: [...prevState.transactions, transaction],\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { transactions } = this.state;\r\n    const { deposit, withdraw } = accountSummary(this.state.transactions);\r\n    const balance = deposit - withdraw;\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <Controls onCommitTransaction={this.handleSubmit} />\r\n\r\n        <Balance balance={balance} income={deposit} expenses={withdraw} />\r\n\r\n        <TransactionHistory transactions={transactions} />\r\n        <NotificationContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Dashboard from './components/Dashboard/Dashboard';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nReactDOM.render(<Dashboard />, document.getElementById('root'));\r\n"],"sourceRoot":""}