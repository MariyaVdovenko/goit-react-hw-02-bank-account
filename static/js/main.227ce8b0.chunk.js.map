{"version":3,"sources":["components/Dashboard/Balance/Balance.module.css","components/Dashboard/Controls/Controls.module.css","components/Dashboard/TransactionHistory/TransactionHistory.module.css","components/Dashboard/Controls/Controls.jsx","components/Dashboard/Balance/Balance.jsx","components/Dashboard/TransactionHistory/TransactionHistory.jsx","components/services/isEnough.js","components/Dashboard/Dashboard.jsx","index.js"],"names":["module","exports","Controls","className","styles","controls","type","name","value","this","props","amount","onChange","handleChange","onClick","handleSubmit","Component","defaultProps","Balance","balance","income","expenses","balanceData","role","aria-label","TransactionHistory","transactions","history","map","transaction","key","id","date","accountSummary","reduce","acc","t","deposit","withdraw","isEnough","Number","Dashboard","state","e","setState","target","nameOperation","currentTarget","NotificationManager","error","saveTransaction","transType","shortId","generate","Date","toLocaleString","addTransaction","prevState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.227ce8b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__zQEqW\",\"balanceData\":\"Balance_balanceData__1-2jW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__3aeoz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__33oRN\"};","import React, { Component } from 'react';\r\nimport styles from './Controls.module.css';\r\n\r\nexport default class Controls extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {};\r\n\r\n  render() {\r\n    return (\r\n      <section className={styles.controls}>\r\n        <input\r\n          type=\"number\"\r\n          name=\"amount\"\r\n          value={this.props.amount}\r\n          onChange={this.props.handleChange}\r\n        />\r\n        <button type=\"button\" name=\"deposit\" onClick={this.props.handleSubmit}>\r\n          Deposit\r\n        </button>\r\n        <button type=\"button\" name=\"withdraw\" onClick={this.props.handleSubmit}>\r\n          Withdraw\r\n        </button>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './Balance.module.css';\r\n\r\nconst Balance = ({ balance, income, expenses }) => (\r\n  <section className={styles.balance}>\r\n    <span className={styles.balanceData}>\r\n      <span role=\"img\" aria-label=\"up\">\r\n        ⬆️\r\n      </span>\r\n      {income}$\r\n    </span>\r\n    <span className={styles.balanceData}>\r\n      <span role=\"img\" aria-label=\"down\">\r\n        ⬇️\r\n      </span>\r\n      {expenses}$\r\n    </span>\r\n    <span className={styles.balanceData}>Balance: {balance}$</span>\r\n  </section>\r\n);\r\n\r\nexport default Balance;\r\n","import React from 'react';\r\nimport styles from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ transactions }) => (\r\n  <table className={styles.history}>\r\n    <thead>\r\n      <tr>\r\n        <th>Transaction</th>\r\n        <th>Amount</th>\r\n        <th>Date</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {transactions.map(transaction => (\r\n        <tr key={transaction.id}>\r\n          <td>{transaction.type}</td>\r\n          <td>{transaction.amount}$</td>\r\n          <td>{transaction.date}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nexport default TransactionHistory;\r\n","export const accountSummary = transactions => {\r\n  const summary = transactions.reduce(\r\n    (acc, t) => {\r\n      return {\r\n        ...acc,\r\n        [t.type]: t.amount + acc[t.type],\r\n      };\r\n    },\r\n    {\r\n      deposit: 0,\r\n      withdraw: 0,\r\n    },\r\n  );\r\n  return summary;\r\n};\r\nexport const isEnough = (transactions, amount) => {\r\n  const { deposit, withdraw } = accountSummary(transactions);\r\n\r\n  const balance = deposit - withdraw;\r\n\r\n  return balance >= Number(amount);\r\n};\r\n","import React, { Component } from 'react';\r\nimport Controls from './Controls/Controls';\r\nimport Balance from './Balance/Balance';\r\nimport TransactionHistory from './TransactionHistory/TransactionHistory';\r\nimport shortId from 'shortid';\r\nimport {\r\n  NotificationContainer,\r\n  NotificationManager,\r\n} from 'react-notifications';\r\nimport { accountSummary, isEnough } from '../services/isEnough';\r\n\r\nexport default class Dashboard extends Component {\r\n  static defaultProps = {};\r\n\r\n  static propTypes = {};\r\n\r\n  state = {\r\n    transactions: [],\r\n    amount: '',\r\n  };\r\n  handleChange = e => {\r\n    this.setState({ amount: e.target.value });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    const nameOperation = e.currentTarget.name;\r\n\r\n    if (this.state.amount <= 0) {\r\n      NotificationManager.error(\r\n        'Введите сумму для проведения операции!',\r\n        'Ошибка',\r\n        5000,\r\n      );\r\n\r\n      return;\r\n    }\r\n    if (\r\n      nameOperation === 'withdraw' &&\r\n      !isEnough(this.state.transactions, this.state.amount)\r\n    ) {\r\n      NotificationManager.error(\r\n        'На счету недостаточно средств для проведения операции!',\r\n        'Ошибка',\r\n        5000,\r\n      );\r\n      return;\r\n    }\r\n    this.saveTransaction(`${nameOperation}`);\r\n  };\r\n\r\n  saveTransaction(transType) {\r\n    const transaction = {\r\n      id: shortId.generate(),\r\n      amount: Number(this.state.amount),\r\n      date: new Date().toLocaleString(),\r\n      type: transType,\r\n    };\r\n\r\n    this.addTransaction(transaction);\r\n  }\r\n\r\n  addTransaction(transaction) {\r\n    this.setState(prevState => ({\r\n      amount: '',\r\n      transactions: [...prevState.transactions, transaction],\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    const { amount, transactions } = this.state;\r\n    const { deposit, withdraw } = accountSummary(this.state.transactions);\r\n    const balance = deposit - withdraw;\r\n\r\n    return (\r\n      <div className=\"dashboard\">\r\n        <Controls\r\n          amount={amount}\r\n          handleChange={this.handleChange}\r\n          handleSubmit={this.handleSubmit}\r\n        />\r\n\r\n        <Balance balance={balance} income={deposit} expenses={withdraw} />\r\n\r\n        <TransactionHistory transactions={transactions} />\r\n        <NotificationContainer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Dashboard from './components/Dashboard/Dashboard';\r\nimport 'react-notifications/lib/notifications.css';\r\n\r\nReactDOM.render(<Dashboard />, document.getElementById('root'));\r\n"],"sourceRoot":""}